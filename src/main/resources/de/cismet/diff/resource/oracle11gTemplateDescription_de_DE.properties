
# 0 = tablename
# 1 = fieldname type constraint [, fieldname type constraint....] enumeration
create_table =  Legt die neue Tabelle "{0}" mit den Spalten "{1}" an.

# 0 = sequence name
# 1 = start value
create_sequence = Legt eine neue Sequenz mit dem Namen "{0}" an und startet bei dem Wert "{1}".

# 0 = tablename
drop_table =  L\u00f6scht die Tabelle "{0}".

# 0 = sequence name
drop_sequence = L\u00f6scht die Sequenz "{0}".

# 0 = tablename
# 1 = columnname
alter_drop_column = L\u00f6scht die Spalte "{1}" aus der Tabelle "{0}".

# 0 = tablename
# 1 = columnname
# 2 = constraint
alter_add_column = F\u00fcgt die Spalte "{1}" mit dem Typ "{2}" zur Tabelle "{0}" hinzu.

# 0 = tablename
# 1 = columnname
# 2 = constraing
alter_column_set = \u00c4ndert eine Nebenbedingung der Spalte "{1}" der Tabelle "{0}" auf "{2}".

# 0 = tablename
# 1 = columnname
# 2 = constraint
alter_column_drop = L\u00f6scht die Nebenbedingung "{2}" der Spalte "{1}" der Tabelle "{0}".

# 0 = tablename
# 1 = constraint
alter_drop_constraint = Entfernt die Bedingung "{1}" aus der Tabelle "{0}".

# 0 = tablename
# 1 = new columnname
# 2 = old columnname
alter_rename_column = \u00c4ndert den Namen der Spalte "{2}" der Tabelle "{0}" in "{1}".

# 0 = tablename
# 1 = columnname
alter_add_primary = Setzt den Inhalt der Spalte "{1}" als Prim\u00e4rschl\u00fcssel der Tabelle "{0}".

# 0 = tablename
# 1 = new columnname
# 2 = old columnname
update_copy = Kopiert den Inhalt der Spalte "{2}" der Tabelle "{0}" in die Spalte "{1}" der selben Tabelle.

# 0 = tablename
# 1 = columname
# 2 = new value
update_where_null = \u00c4ndert den Wert der Spalte "{1}" der Tabelle "{0}" auf "{2}", wenn die Zeile 'null' ist.

# 0 = tablename
# 1 = columname
# 2 = sequence name
select_setval_max = \u00c4ndert den aktuellen Wert der Sequenz "{2}" auf den maximalen Wert der Spalte "{1}" der Tabelle "{0}".



# 0 = tablename
warning_alter_type_mismatch = Dieses Statement ist Teil einer Typ\u00e4nderung innerhalb der Tabelle "{0}": Das automatische Konvertieren k\u00f6nnte fehlschlagen oder falsch durchgef\u00fchrt werden.

# 0 = tablename
warning_create_complex_types_not_found = Ein oder mehrere komplexe Typen der Tabelle "{0}" nicht vorhanden. Er/sie konnte/n nicht gefunden oder erstellt werden, da kein entsprechender Eintrag in "cs_class" vorhanden ist.

# 0 = tablename
# 1 = columnname
warning_alter_complex_type_not_found = Der Schl\u00fcssel in der Spalte "{1}" der Tabelle "{0}" soll auf eine andere Tabelle zeigen. Diese Tabelle konnte nicht gefunden oder erstellt werden, da kein entsprechender Eintrag in "cs_class" vorhanden ist.

# 0 = tablename
# 1 = columnname
warning_new_primary_key = Die Tabelle "{0}" erh\u00e4lt einen neuen Prim\u00e4rschl\u00fcssel. Diese Operation kann unter Umst\u00e4nden nicht korrekt durchgef\u00fchrt werden. Bitte stellen Sie sicher, dass weder 'null'-, noch doppelte Werte in der Spalte "{1}" vorhanden sind.

# 0 = tablename
warning_drop_primary_key = Die Tabelle "{0}" enth\u00e4lt nach diesem Kommando keinen Prim\u00e4rschl\u00fcssel mehr.

# 0 = tablename
warning_composite_primary_key = Die Tabelle "{0}" enth\u00e4lt einen zusammengesetzten Schl\u00fcssel.

# 0 = tablename
# 1 = columnname
warning_alter_column_to_notnull = Die Spalte "{1}" der Tabelle "{0}" soll auf 'NOT NULL' ge\u00e4ndert werden und es ist kein Standard-Wert definiert. Diese Operation kann unter Umst\u00e4nden nicht korrekt ausgef\u00fchrt werden. Bitte stellen Sie sicher, dass keine 'null'-Werte in der Spalte "{1}" vorhanden sind.



# 0 = tablename
# 1 = columnname
group_desc_update_and_notnull = Diese Statements setzen den Default-Wert der Spalte "{1}" der Tabelle "{0}" \u00fcberall dort ein, wo diese 'null' ist und \u00e4ndern eine Nebenbedingung der Spalte auf 'null nicht erlaubt'.

# 0 = tablename
group_desc_new_table = Legt eine neue Tabelle mit dem Namen "{0}" an. Weiterhin wird eine Sequenz f\u00fcr den Prim\u00e4rschl\u00fcssel erstellt, sofern noch keine vorhanden ist, und als dessen Default-Wert festgelegt. Der Prim\u00e4rschl\u00fcssel ist immer vom Typ "INTEGER" und ist nie "optional". Alle anderen Felder werden entsprechend ihren Spezifikationen in "cs_attr" angelegt.

# 0 = tablename
# 1 = columnname
# 2 = old typename
# 3 = new typename
group_desc_convert_type = Diese Statements sollen den Typ der Spalte "{1}" der Tabelle "{0}" von "{2}" in "{3}" konvertieren.

# 0 = tablename
group_desc_prim_key_fit = Hier wird der Prim\u00e4rschl\u00fcssel der Tabelle "{0}" angepasst.

# 0 = tablename
group_desc_del_table_and_prim_key_seq = Tabelle "{0}" wird gel\u00f6scht. Die Prim\u00e4rschl\u00fcsselsequenz wird auch gel\u00f6scht, sofern sie vorhanden ist.

group_warn_convert_error_on_type_mismatch = Die Konvertierung wird fehlschlagen, wenn die Typen nicht kompatibel sind.
alter_drop_primary=L\u00f6scht die Prim\u00e4rschl\u00fcssel-Nebenbedingung von Tabelle "{0}".
create_seq_trigger=Erstellt einen neuen "Trigger", der den n\u00e4chsten Wert der Sequenz "{3}" in Spalte "{2}" von Tabelle "{1}" einf\u00fcgt, wenn der Wert bei einem "insert" nicht gesetzt ist.
