
# 0 = tablename
# 1 = fieldname type constraint [, fieldname type constraint....] enumeration
create_table =  Legt die neue Tabelle "{0}" mit den Spalten "{1}" an.

# 0 = sequence name
# 1 = start value
create_sequence = Legt eine neue Sequenz mit dem Namen "{0}" an und startet bei dem Wert "{1}".

# 0 = tablename
drop_table =  Löscht die Tabelle "{0}".

# 0 = sequence name
drop_sequence = Löscht die Sequenz "{0}".

# 0 = tablename
# 1 = columnname
alter_drop_column = Löscht die Spalte "{1}" aus der Tabelle "{0}".

# 0 = tablename
# 1 = columnname
# 2 = constraint
alter_add_column = Fügt die Spalte "{1}" mit dem Typ "{2}" zur Tabelle "{0}" hinzu.

# 0 = tablename
# 1 = columnname
# 2 = constraing
alter_column_set = Ändert eine Nebenbedingung der Spalte "{1}" der Tabelle "{0}" auf "{2}".

# 0 = tablename
# 1 = columnname
# 2 = constraint
alter_column_drop = Löscht die Nebenbedingung "{2}" der Spalte "{1}" der Tabelle "{0}".

# 0 = tablename
# 1 = constraint
alter_drop_constraint = Entfernt die Bedingung "{1}" aus der Tabelle "{0}".

# 0 = tablename
# 1 = new columnname
# 2 = old columnname
alter_rename_column = Ändert den Namen der Spalte "{2}" der Tabelle "{0}" in "{1}".

# 0 = tablename
# 1 = columnname
alter_add_primary = Setzt den Inhalt der Spalte "{1}" als Primärschlüssel der Tabelle "{0}".

# 0 = tablename
# 1 = new columnname
# 2 = old columnname
update_copy = Kopiert den Inhalt der Spalte "{2}" der Tabelle "{0}" in die Spalte "{1}" der selben Tabelle.

# 0 = tablename
# 1 = columname
# 2 = new value
update_where_null = Ändert den Wert der Spalte "{1}" der Tabelle "{0}" auf "{2}", wenn die Zeile 'null' ist.

# 0 = tablename
# 1 = columname
# 2 = sequence name
select_setval_max = Ändert den aktuellen Wert der Sequenz "{2}" auf den maximalen Wert der Spalte "{1}" der Tabelle "{0}".



# 0 = tablename
warning_alter_type_mismatch = Dieses Statement ist Teil einer Typänderung innerhalb der Tabelle "{0}": Das automatische Konvertieren könnte fehlschlagen oder falsch durchgeführt werden.

# 0 = tablename
warning_create_complex_types_not_found = Ein oder mehrere komplexe Typen der Tabelle "{0}" nicht vorhanden. Er/sie konnte/n nicht gefunden oder erstellt werden, da kein entsprechender Eintrag in "cs_class" vorhanden ist.

# 0 = tablename
# 1 = columnname
warning_alter_complex_type_not_found = Der Schlüssel in der Spalte "{1}" der Tabelle "{0}" soll auf eine andere Tabelle zeigen. Diese Tabelle konnte nicht gefunden oder erstellt werden, da kein entsprechender Eintrag in "cs_class" vorhanden ist.

# 0 = tablename
# 1 = columnname
warning_new_primary_key = Die Tabelle "{0}" erhält einen neuen Primärschlüssel. Diese Operation kann unter Umständen nicht korrekt durchgeführt werden. Bitte stellen Sie sicher, dass weder 'null'-, noch doppelte Werte in der Spalte "{1}" vorhanden sind.

# 0 = tablename
warning_drop_primary_key = Die Tabelle "{0}" enthält nach diesem Kommando keinen Primärschlüssel mehr.

# 0 = tablename
warning_composite_primary_key = Die Tabelle "{0}" enthält einen zusammengesetzten Schlüssel.

# 0 = tablename
# 1 = columnname
warning_alter_column_to_notnull = Die Spalte "{1}" der Tabelle "{0}" soll auf 'NOT NULL' geändert werden und es ist kein Standard-Wert definiert. Diese Operation kann unter Umständen nicht korrekt ausgeführt werden. Bitte stellen Sie sicher, dass keine 'null'-Werte in der Spalte "{1}" vorhanden sind.



# 0 = tablename
# 1 = columnname
group_desc_update_and_notnull = Diese Statements setzen den Default-Wert der Spalte "{1}" der Tabelle "{0}" überall dort ein, wo diese 'null' ist und ändern eine Nebenbedingung der Spalte auf 'null nicht erlaubt'.

# 0 = tablename
group_desc_new_table = Legt eine neue Tabelle mit dem Namen "{0}" an. Weiterhin wird eine Sequenz für den Primärschlüssel erstellt, sofern noch keine vorhanden ist, und als dessen Default-Wert festgelegt. Der Primärschlüssel ist immer vom Typ "INTEGER" und ist nie "optional". Alle anderen Felder werden entsprechend ihren Spezifikationen in "cs_attr" angelegt.

# 0 = tablename
# 1 = columnname
# 2 = old typename
# 3 = new typename
group_desc_convert_type = Diese Statements sollen den Typ der Spalte "{1}" der Tabelle "{0}" von "{2}" in "{3}" konvertieren.

# 0 = tablename
group_desc_prim_key_fit = Hier wird der Primärschlüssel der Tabelle "{0}" angepasst.